type no_converter = int * int ;;
type t = { a: no_converter; b: string } with sexp ;;
#part 1
type t = { a: no_converter sexp_opaque; b: string } with sexp ;;
#part 2
sexp_of_t { a = (3,4); b = "foo" } ;;
#part 3
t_of_sexp (Sexp.of_string "((a whatever) (b foo))") ;;
#part 4
type t = { a: no_converter sexp_opaque list; b: string } with sexp ;;
t_of_sexp (Sexp.of_string "((a ()) (b foo))") ;;
#part 5
type t = { a: no_converter sexp_opaque; b: string } with sexp_of ;;
type t = { a: no_converter sexp_opaque; b: string } with of_sexp ;;
